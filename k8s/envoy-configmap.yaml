apiVersion: v1
kind: ConfigMap
metadata:
  name: envoy-config
  namespace: default
data:
  envoy.yaml: |
    # Админ-порт Envoy (для дебага/healthz на :9901)
    admin:
      access_log_path: /tmp/admin_access.log
      address:
        socket_address:
          address: 0.0.0.0
          port_value: 9901

    node:
      id: ingress-envoy
      cluster: ingress-envoy

    static_resources:
      listeners:
        - name: listener_http
          address:
            socket_address:
              address: 0.0.0.0
              port_value: 80
          filter_chains:
            - filters:
                - name: envoy.filters.network.http_connection_manager
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                    stat_prefix: ingress_http
                    route_config:
                      name: local_route
                      virtual_hosts:
                        - name: backend
                          domains: ["*"]
                          routes:
                            # быстрый /healthz на FastAPI (не JWT)
                            - match:
                                prefix: /healthz
                              route:
                                cluster: python_service
                                timeout: 0s
                            # API-эндпоинты (JWT проверяет Envoy)
                            - match:
                                prefix: /api/v1/
                              route:
                                cluster: python_service
                                timeout: 0s
                    http_filters:
                      # 1) JWT-провайдер
                      - name: envoy.filters.http.jwt_authn
                        typed_config:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication
                          providers:
                            keycloak:
                              issuer: "http://localhost:8080/realms/nica-tier1"
                              remote_jwks:
                                http_uri:
                                  uri: "http://localhost:8080/realms/nica-tier1/protocol/openid-connect/certs"
                                  cluster: keycloak_jwks
                                  timeout: 5s
                              forward: true
                          rules:
                            # /healthz — пропускаем
                            - match: { prefix: "/healthz" }
                              requires: {}
                            # /api/v1/… — требуем токен
                            - match: { prefix: "/api/v1/" }
                              requires: { provider_name: keycloak }
                      # 2) router
                      - name: envoy.filters.http.router
                        typed_config:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router

      clusters:
        # FastAPI upstream
        - name: python_service
          connect_timeout: 0.25s
          type: LOGICAL_DNS
          lb_policy: ROUND_ROBIN
          load_assignment:
            cluster_name: python_service
            endpoints:
              - lb_endpoints:
                  - endpoint:
                      address:
                        socket_address:
                          address: python-service.default.svc.cluster.local
                          port_value: 8000

        # JWKS-upstream для Keycloak
        - name: keycloak_jwks
          connect_timeout: 0.25s
          type: LOGICAL_DNS
          lb_policy: ROUND_ROBIN
          load_assignment:
            cluster_name: keycloak_jwks
            endpoints:
              - lb_endpoints:
                  - endpoint:
                      address:
                        socket_address:
                          address: keycloak.default.svc.cluster.local
                          port_value: 80