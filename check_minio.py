from minio import Minio
from minio.error import S3Error
import os

# –ö–æ–Ω—Ñ–∏–≥
MINIO_ENDPOINT = os.getenv("MINIO_ENDPOINT", "localhost:9000")
MINIO_ACCESS_KEY = os.getenv("MINIO_ACCESS_KEY", "admin")
MINIO_SECRET_KEY = os.getenv("MINIO_SECRET_KEY", "admin12345")
MINIO_BUCKET = os.getenv("MINIO_BUCKET", "spd-events")

# –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç–∞
client = Minio(
    MINIO_ENDPOINT,
    access_key=MINIO_ACCESS_KEY,
    secret_key=MINIO_SECRET_KEY,
    secure=False,
)

print(f"üì° Connecting to MinIO at {MINIO_ENDPOINT}")

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∫–µ—Ç
if not client.bucket_exists(MINIO_BUCKET):
    print(f"‚ùå Bucket {MINIO_BUCKET} does not exist!")
    exit(1)

print(f"‚úÖ Bucket {MINIO_BUCKET} found.\nüìÇ Listing objects:")

# –í—ã–≤–æ–¥–∏–º –æ–±—ä–µ–∫—Ç—ã
objects = list(client.list_objects(MINIO_BUCKET, recursive=True))
if not objects:
    print("‚ö†Ô∏è No objects found in the bucket.")
else:
    for obj in objects:
        print(f"üìÑ Found file: {obj.object_name}")
        response = client.get_object(MINIO_BUCKET, obj.object_name)
        content = response.read().decode("utf-8")
        print(f"üì• Content of {obj.object_name}:\n{content}")
        response.close()
        break  # –ø—Ä–æ–≤–µ—Ä–∏–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–π